{"ast":null,"code":"var _jsxFileName = \"/Users/sparshs.pradhan/book-review-platform/frontend/src/components/BookListing.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchBooks } from '../redux/bookSlice';\n\n// const BookListing = () => {\n//   const dispatch = useDispatch();\n//   const { books, loading, error } = useSelector((state) => state.books);\n\n//   useEffect(() => {\n//     dispatch(fetchBooks());\n//   }, [dispatch]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>Error: {error}</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>All Books</h1>\n//       <ul>\n//         {books.map((book) => (\n//           <li key={book._id}>\n//             <h3>{book.title}</h3>\n//             <p>{book.author}</p>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default BookListing;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './BookListing.css';\n\n// const BookListing = () => {\n//   const [books, setBooks] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [author, setAuthor] = useState('');\n//   const [genre, setGenre] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     fetchBooks();\n//   }, []);\n\n//   const fetchBooks = async (filters = {}) => {\n//     setLoading(true);\n//     try {\n//       const response = await axios.get('http://localhost:5002/api/books', { params: filters });\n//       setBooks(response.data);\n//       setLoading(false);\n//     } catch (err) {\n//       setError('Error fetching books');\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSearch = () => {\n//     fetchBooks({ search, author, genre });\n//   };\n\n//   return (\n//     <div>\n//       <h1>Book Listing</h1>\n//       <div className=\"filter-bar\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by title\"\n//           value={search}\n//           onChange={(e) => setSearch(e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by author\"\n//           value={author}\n//           onChange={(e) => setAuthor(e.target.value)}\n//         />\n//         <select value={genre} onChange={(e) => setGenre(e.target.value)}>\n//           <option value=\"\">Filter by genre</option>\n//           <option value=\"Fiction\">Fiction</option>\n//           <option value=\"Non-Fiction\">Non-Fiction</option>\n//           <option value=\"Fantasy\">Fantasy</option>\n//           <option value=\"Science\">Science</option>\n//           {/* Add more genres as needed */}\n//         </select>\n//         <button onClick={handleSearch}>Search</button>\n//       </div>\n\n//       {loading && <div>Loading...</div>}\n//       {error && <div>{error}</div>}\n\n//       <div className=\"book-list\">\n//         {books.length > 0 ? (\n//           books.map((book) => (\n//             <div key={book._id} className=\"book-item\">\n//               <h3>{book.title}</h3>\n//               <p><strong>Author:</strong> {book.author}</p>\n//               <p><strong>Genre:</strong> {book.genre}</p>\n//               <p>{book.description}</p>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No books found.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookListing;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './BookListing.css';\n\n// const BookListing = () => {\n//   const [books, setBooks] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [author, setAuthor] = useState('');\n//   const [genre, setGenre] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   // Function to fetch books with applied filters\n//   const fetchBooks = async (filters = {}) => {\n//     setLoading(true);\n//     try {\n//       const response = await axios.get('http://localhost:5002/api/books', { params: filters });\n//       setBooks(response.data);\n//       setLoading(false);\n//     } catch (err) {\n//       setError('Error fetching books');\n//       setLoading(false);\n//     }\n//   };\n\n//   // Initial fetch on component mount\n//   useEffect(() => {\n//     fetchBooks();\n//   }, []);\n\n//   // Handle search button click\n//   const handleSearch = () => {\n//     fetchBooks({ search, author, genre });\n//   };\n\n//   return (\n//     <div>\n//       <h1>Book Listing</h1>\n\n//       {/* Search and filter form */}\n//       <div className=\"filter-bar\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by title\"\n//           value={search}\n//           onChange={(e) => setSearch(e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by author\"\n//           value={author}\n//           onChange={(e) => setAuthor(e.target.value)}\n//         />\n//         <select value={genre} onChange={(e) => setGenre(e.target.value)}>\n//           <option value=\"\">Filter by genre</option>\n//           <option value=\"Fiction\">Fiction</option>\n//           <option value=\"Non-Fiction\">Non-Fiction</option>\n//           <option value=\"Fantasy\">Fantasy</option>\n//           <option value=\"Science\">Science</option>\n//           {/* Add more genres as needed */}\n//         </select>\n//         <button onClick={handleSearch}>Search</button>\n//       </div>\n\n//       {/* Loading and error states */}\n//       {loading && <div>Loading...</div>}\n//       {error && <div>{error}</div>}\n\n//       {/* Display the books */}\n//       <div className=\"book-list\">\n//         {books.length > 0 ? (\n//           books.map((book) => (\n//             <div key={book._id} className=\"book-item\">\n//               <h3>{book.title}</h3>\n//               <p><strong>Title:</strong> {book.title}</p>\n//               <p><strong>Author:</strong> {book.author}</p>\n//               <p><strong>Genre:</strong> {book.genre}</p>\n//               <p><strong>Description:</strong> {book.description}</p>\n\n//               <p>{book.description}</p>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No books found.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookListing;\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookListing = () => {\n  _s();\n  const location = useLocation();\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const searchCriteria = location.state || {}; // Retrieve search/filter criteria\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        let url = 'http://localhost:5002/api/books';\n        if (searchCriteria.title || searchCriteria.author) {\n          url += `?title=${searchCriteria.title || ''}&author=${searchCriteria.author || ''}`;\n        }\n        const response = await axios.get(url);\n        setBooks(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error fetching books');\n        setLoading(false);\n      }\n    };\n    fetchBooks();\n  }, [searchCriteria]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-list\",\n      children: books.length > 0 ? books.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 18\n          }, this), \" \", book.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 18\n          }, this), \" \", book.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this)]\n      }, book._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No books match the search criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_s(BookListing, \"fnJy5z+iyN5DluERY44FkW2WltE=\", false, function () {\n  return [useLocation];\n});\n_c = BookListing;\nexport default BookListing;\nvar _c;\n$RefreshReg$(_c, \"BookListing\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","jsxDEV","_jsxDEV","BookListing","_s","location","books","setBooks","loading","setLoading","error","setError","searchCriteria","state","fetchBooks","url","title","author","response","get","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","book","description","_id","_c","$RefreshReg$"],"sources":["/Users/sparshs.pradhan/book-review-platform/frontend/src/components/BookListing.js"],"sourcesContent":["// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchBooks } from '../redux/bookSlice';\n\n// const BookListing = () => {\n//   const dispatch = useDispatch();\n//   const { books, loading, error } = useSelector((state) => state.books);\n\n//   useEffect(() => {\n//     dispatch(fetchBooks());\n//   }, [dispatch]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>Error: {error}</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>All Books</h1>\n//       <ul>\n//         {books.map((book) => (\n//           <li key={book._id}>\n//             <h3>{book.title}</h3>\n//             <p>{book.author}</p>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default BookListing;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './BookListing.css';\n\n// const BookListing = () => {\n//   const [books, setBooks] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [author, setAuthor] = useState('');\n//   const [genre, setGenre] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     fetchBooks();\n//   }, []);\n\n//   const fetchBooks = async (filters = {}) => {\n//     setLoading(true);\n//     try {\n//       const response = await axios.get('http://localhost:5002/api/books', { params: filters });\n//       setBooks(response.data);\n//       setLoading(false);\n//     } catch (err) {\n//       setError('Error fetching books');\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSearch = () => {\n//     fetchBooks({ search, author, genre });\n//   };\n\n//   return (\n//     <div>\n//       <h1>Book Listing</h1>\n//       <div className=\"filter-bar\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by title\"\n//           value={search}\n//           onChange={(e) => setSearch(e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by author\"\n//           value={author}\n//           onChange={(e) => setAuthor(e.target.value)}\n//         />\n//         <select value={genre} onChange={(e) => setGenre(e.target.value)}>\n//           <option value=\"\">Filter by genre</option>\n//           <option value=\"Fiction\">Fiction</option>\n//           <option value=\"Non-Fiction\">Non-Fiction</option>\n//           <option value=\"Fantasy\">Fantasy</option>\n//           <option value=\"Science\">Science</option>\n//           {/* Add more genres as needed */}\n//         </select>\n//         <button onClick={handleSearch}>Search</button>\n//       </div>\n\n//       {loading && <div>Loading...</div>}\n//       {error && <div>{error}</div>}\n\n//       <div className=\"book-list\">\n//         {books.length > 0 ? (\n//           books.map((book) => (\n//             <div key={book._id} className=\"book-item\">\n//               <h3>{book.title}</h3>\n//               <p><strong>Author:</strong> {book.author}</p>\n//               <p><strong>Genre:</strong> {book.genre}</p>\n//               <p>{book.description}</p>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No books found.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookListing;\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './BookListing.css';\n\n// const BookListing = () => {\n//   const [books, setBooks] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [author, setAuthor] = useState('');\n//   const [genre, setGenre] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   // Function to fetch books with applied filters\n//   const fetchBooks = async (filters = {}) => {\n//     setLoading(true);\n//     try {\n//       const response = await axios.get('http://localhost:5002/api/books', { params: filters });\n//       setBooks(response.data);\n//       setLoading(false);\n//     } catch (err) {\n//       setError('Error fetching books');\n//       setLoading(false);\n//     }\n//   };\n\n//   // Initial fetch on component mount\n//   useEffect(() => {\n//     fetchBooks();\n//   }, []);\n\n//   // Handle search button click\n//   const handleSearch = () => {\n//     fetchBooks({ search, author, genre });\n//   };\n\n//   return (\n//     <div>\n//       <h1>Book Listing</h1>\n\n//       {/* Search and filter form */}\n//       <div className=\"filter-bar\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by title\"\n//           value={search}\n//           onChange={(e) => setSearch(e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by author\"\n//           value={author}\n//           onChange={(e) => setAuthor(e.target.value)}\n//         />\n//         <select value={genre} onChange={(e) => setGenre(e.target.value)}>\n//           <option value=\"\">Filter by genre</option>\n//           <option value=\"Fiction\">Fiction</option>\n//           <option value=\"Non-Fiction\">Non-Fiction</option>\n//           <option value=\"Fantasy\">Fantasy</option>\n//           <option value=\"Science\">Science</option>\n//           {/* Add more genres as needed */}\n//         </select>\n//         <button onClick={handleSearch}>Search</button>\n//       </div>\n\n//       {/* Loading and error states */}\n//       {loading && <div>Loading...</div>}\n//       {error && <div>{error}</div>}\n\n//       {/* Display the books */}\n//       <div className=\"book-list\">\n//         {books.length > 0 ? (\n//           books.map((book) => (\n//             <div key={book._id} className=\"book-item\">\n//               <h3>{book.title}</h3>\n//               <p><strong>Title:</strong> {book.title}</p>\n//               <p><strong>Author:</strong> {book.author}</p>\n//               <p><strong>Genre:</strong> {book.genre}</p>\n//               <p><strong>Description:</strong> {book.description}</p>\n\n//               <p>{book.description}</p>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No books found.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookListing;\n\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst BookListing = () => {\n  const location = useLocation();\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const searchCriteria = location.state || {}; // Retrieve search/filter criteria\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        let url = 'http://localhost:5002/api/books';\n        if (searchCriteria.title || searchCriteria.author) {\n          url += `?title=${searchCriteria.title || ''}&author=${searchCriteria.author || ''}`;\n        }\n\n        const response = await axios.get(url);\n        setBooks(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error fetching books');\n        setLoading(false);\n      }\n    };\n\n    fetchBooks();\n  }, [searchCriteria]);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div>\n      <h1>Book Listing</h1>\n      <div className=\"book-list\">\n        {books.length > 0 ? (\n          books.map((book) => (\n            <div key={book._id} className=\"book-item\">\n              <h3>{book.title}</h3>\n              <p><strong>Author:</strong> {book.author}</p>\n              <p><strong>Description:</strong> {book.description}</p>\n            </div>\n          ))\n        ) : (\n          <p>No books match the search criteria.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BookListing;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}