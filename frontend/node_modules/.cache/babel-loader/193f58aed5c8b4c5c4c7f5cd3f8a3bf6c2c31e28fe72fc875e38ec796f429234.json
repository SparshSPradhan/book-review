{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const bookSlice = createSlice({\n  name: 'books',\n  initialState: {\n    books: [],\n    loading: false,\n    error: null\n  },\n  reducers: {\n    fetchBooksRequest: state => {\n      state.loading = true;\n    },\n    fetchBooksSuccess: (state, action) => {\n      state.books = action.payload;\n      state.loading = false;\n    },\n    fetchBooksFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  fetchBooksRequest,\n  fetchBooksSuccess,\n  fetchBooksFailure\n} = bookSlice.actions;\nexport const fetchBooks = () => async dispatch => {\n  dispatch(fetchBooksRequest());\n  try {\n    const response = await fetch('http://localhost:5000/api/books');\n    const data = await response.json();\n    dispatch(fetchBooksSuccess(data));\n  } catch (error) {\n    dispatch(fetchBooksFailure(error.toString()));\n  }\n};\nexport default bookSlice.reducer;","map":{"version":3,"names":["createSlice","bookSlice","name","initialState","books","loading","error","reducers","fetchBooksRequest","state","fetchBooksSuccess","action","payload","fetchBooksFailure","actions","fetchBooks","dispatch","response","fetch","data","json","toString","reducer"],"sources":["/Users/sparshs.pradhan/book-review-platform/frontend/src/redux/bookSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const bookSlice = createSlice({\n  name: 'books',\n  initialState: {\n    books: [],\n    loading: false,\n    error: null\n  },\n  reducers: {\n    fetchBooksRequest: (state) => {\n      state.loading = true;\n    },\n    fetchBooksSuccess: (state, action) => {\n      state.books = action.payload;\n      state.loading = false;\n    },\n    fetchBooksFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n  },\n});\n\nexport const { fetchBooksRequest, fetchBooksSuccess, fetchBooksFailure } = bookSlice.actions;\n\nexport const fetchBooks = () => async (dispatch) => {\n  dispatch(fetchBooksRequest());\n  try {\n    const response = await fetch('http://localhost:5000/api/books');\n    const data = await response.json();\n    dispatch(fetchBooksSuccess(data));\n  } catch (error) {\n    dispatch(fetchBooksFailure(error.toString()));\n  }\n};\n\nexport default bookSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiB,EAAGC,KAAK,IAAK;MAC5BA,KAAK,CAACJ,OAAO,GAAG,IAAI;IACtB,CAAC;IACDK,iBAAiB,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpCF,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACJ,OAAO,GAAG,KAAK;IACvB,CAAC;IACDQ,iBAAiB,EAAEA,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACpCF,KAAK,CAACH,KAAK,GAAGK,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACJ,OAAO,GAAG,KAAK;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG,iBAAiB;EAAEE,iBAAiB;EAAEG;AAAkB,CAAC,GAAGZ,SAAS,CAACa,OAAO;AAE5F,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAClDA,QAAQ,CAACR,iBAAiB,CAAC,CAAC,CAAC;EAC7B,IAAI;IACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;IAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,QAAQ,CAACN,iBAAiB,CAACS,IAAI,CAAC,CAAC;EACnC,CAAC,CAAC,OAAOb,KAAK,EAAE;IACdU,QAAQ,CAACH,iBAAiB,CAACP,KAAK,CAACe,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC/C;AACF,CAAC;AAED,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}