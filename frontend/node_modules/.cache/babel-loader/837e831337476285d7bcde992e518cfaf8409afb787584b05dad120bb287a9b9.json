{"ast":null,"code":"var _jsxFileName = \"/Users/sparshs.pradhan/book-review-platform/frontend/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchBooks } from '../redux/bookSlice';\n\n// const HomePage = () => {\n//   const dispatch = useDispatch();\n//   const { books, loading, error } = useSelector((state) => state.books);\n\n//   useEffect(() => {\n//     dispatch(fetchBooks());\n//   }, [dispatch]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>Error: {error}</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>Featured Books</h1>\n//       <div className=\"book-list\">\n//         {books.map((book) => (\n//           <div key={book._id} className=\"book-item\">\n//             <h3>{book.title}</h3>\n//             <p>{book.author}</p>\n//             <p>{book.description}</p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import './HomePage.css'; \n// import { Link } from 'react-router-dom'; // Import Link for navigation\n\n// const HomePage = () => {\n//   const [books, setBooks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchBooks = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5002/api/books');\n//         setBooks(response.data);\n//         setLoading(false);\n//       } catch (err) {\n//         setError('Error fetching books');\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchBooks();\n//   }, []);\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   return (\n//     <div>\n//       <h1>Featured Books</h1>\n//       {/* Link to navigate to the Book Listing page */}\n//       <Link to=\"/books\">\n//         <button className=\"browse-books-button\">Browse All Books</button>\n//       </Link>\n//       <div className=\"book-list\">\n//         {books.length > 0 ? (\n//           books.map((book) => (\n//             <div key={book._id} className=\"book-item\">\n//               {/* <h3>{book.title}</h3> */}\n//               <p><strong>Book Title:</strong> {book.title}</p>\n//               <p><strong>Author:</strong> {book.author}</p>\n//               <p><strong>Description:</strong> {book.description}</p>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No books available.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import './HomePage.css'; \n// import { Link } from 'react-router-dom'; // Import Link for navigation\n\n// const HomePage = () => {\n//   const [books, setBooks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [userId, setUserId] = useState(''); // Initialize userId\n\n//   useEffect(() => {\n//     const fetchBooks = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5002/api/books');\n//         setBooks(response.data);\n//         setLoading(false);\n//       } catch (err) {\n//         setError('Error fetching books');\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchBooks();\n//   }, []);\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   return (\n//     <div>\n//       <h1>Featured Books</h1>\n//       {/* Link to navigate to the Book Listing page */}\n//       <Link to=\"/books\">\n//         <button className=\"browse-books-button\">Browse All Books</button>\n//       </Link>\n//       <Link to={`/user/${userId}`}>\n//   <button className=\"user-profile-button\">View User Profile</button>\n// </Link>\n\n//       <div className=\"book-list\">\n//         {books.length > 0 ? (\n//           books.map((book) => (\n//             <div key={book._id} className=\"book-item\">\n//               <p><strong>Book Title:</strong> {book.title}</p>\n//               <p><strong>Author:</strong> {book.author}</p>\n//               <p><strong>Description:</strong> {book.description}</p>\n//               {/* Button to navigate to the individual book detail page */}\n//               <Link to={`/book/${book._id}`}>\n//                 <button className=\"view-details-button\">View Details</button>\n//               </Link>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No books available.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './HomePage.css';\nimport { Link } from 'react-router-dom'; // Import Link for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userId, setUserId] = useState(''); // Initialize userId\n  const [selectedBookId, setSelectedBookId] = useState(null); // Store selected book ID for reviews\n  const [reviews, setReviews] = useState([]); // Store reviews of the selected book\n  const [reviewContent, setReviewContent] = useState(''); // Store review content\n  const [reviewRating, setReviewRating] = useState(0); // Store review rating\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const response = await axios.get('http://localhost:5002/api/books');\n        setBooks(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error fetching books');\n        setLoading(false);\n      }\n    };\n    fetchBooks();\n  }, []);\n\n  // Fetch reviews when a book is selected\n  const fetchReviews = async bookId => {\n    try {\n      const response = await axios.get('http://localhost:5002/api/reviews', {\n        params: {\n          bookId\n        }\n      });\n      setReviews(response.data);\n      setSelectedBookId(bookId); // Set the current book for which reviews are fetched\n    } catch (err) {\n      console.error('Error fetching reviews:', err);\n    }\n  };\n\n  // Handle review submission\n  const handleReviewSubmit = async e => {\n    e.preventDefault();\n    if (!reviewContent || !reviewRating || !selectedBookId) {\n      alert('All fields are required!');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5002/api/reviews', {\n        bookId: selectedBookId,\n        userId,\n        // Use the actual user ID here\n        rating: reviewRating,\n        content: reviewContent\n      });\n\n      // Update reviews locally after successful submission\n      setReviews(prevReviews => [...prevReviews, response.data]);\n      setReviewContent('');\n      setReviewRating(0);\n      alert('Review submitted successfully!');\n    } catch (err) {\n      console.error('Error submitting review:', err);\n      alert('Failed to submit review.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Featured Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/books\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"browse-books-button\",\n        children: \"Browse All Books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/user/${userId}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-profile-button\",\n        children: \"View User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-list\",\n      children: books.length > 0 ? books.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Book Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 18\n          }, this), \" \", book.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 18\n          }, this), \" \", book.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 18\n          }, this), \" \", book.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/book/${book._id}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-details-button\",\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchReviews(book._id),\n          className: \"view-reviews-button\",\n          children: \"View Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this)]\n      }, book._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No books available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), selectedBookId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviews-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reviews for Selected Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-list\",\n        children: reviews.length > 0 ? reviews.map(review => {\n          var _review$user;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"User:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 22\n              }, this), \" \", ((_review$user = review.user) === null || _review$user === void 0 ? void 0 : _review$user.name) || 'Anonymous']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Rating:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 22\n              }, this), \" \", review.rating, \"/5\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: review.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this)]\n          }, review._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No reviews available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Submit a Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReviewSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: reviewContent,\n          onChange: e => setReviewContent(e.target.value),\n          placeholder: \"Write your review here\",\n          rows: \"5\",\n          cols: \"50\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Rating:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: reviewRating,\n            onChange: e => setReviewRating(Number(e.target.value)),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), [1, 2, 3, 4, 5].map(rating => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: rating,\n              children: rating\n            }, rating, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"gPOtwFSBer2piwnM8CE4YsIen64=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","jsxDEV","_jsxDEV","HomePage","_s","books","setBooks","loading","setLoading","error","setError","userId","setUserId","selectedBookId","setSelectedBookId","reviews","setReviews","reviewContent","setReviewContent","reviewRating","setReviewRating","fetchBooks","response","get","data","err","fetchReviews","bookId","params","console","handleReviewSubmit","e","preventDefault","alert","post","rating","content","prevReviews","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","length","map","book","title","author","description","_id","onClick","review","_review$user","user","name","onSubmit","value","onChange","target","placeholder","rows","cols","required","Number","disabled","type","_c","$RefreshReg$"],"sources":["/Users/sparshs.pradhan/book-review-platform/frontend/src/pages/HomePage.js"],"sourcesContent":["\n\n\n\n\n\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchBooks } from '../redux/bookSlice';\n\n// const HomePage = () => {\n//   const dispatch = useDispatch();\n//   const { books, loading, error } = useSelector((state) => state.books);\n\n//   useEffect(() => {\n//     dispatch(fetchBooks());\n//   }, [dispatch]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>Error: {error}</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>Featured Books</h1>\n//       <div className=\"book-list\">\n//         {books.map((book) => (\n//           <div key={book._id} className=\"book-item\">\n//             <h3>{book.title}</h3>\n//             <p>{book.author}</p>\n//             <p>{book.description}</p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import './HomePage.css'; \n// import { Link } from 'react-router-dom'; // Import Link for navigation\n\n\n// const HomePage = () => {\n//   const [books, setBooks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchBooks = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5002/api/books');\n//         setBooks(response.data);\n//         setLoading(false);\n//       } catch (err) {\n//         setError('Error fetching books');\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchBooks();\n//   }, []);\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   return (\n//     <div>\n//       <h1>Featured Books</h1>\n//       {/* Link to navigate to the Book Listing page */}\n//       <Link to=\"/books\">\n//         <button className=\"browse-books-button\">Browse All Books</button>\n//       </Link>\n//       <div className=\"book-list\">\n//         {books.length > 0 ? (\n//           books.map((book) => (\n//             <div key={book._id} className=\"book-item\">\n//               {/* <h3>{book.title}</h3> */}\n//               <p><strong>Book Title:</strong> {book.title}</p>\n//               <p><strong>Author:</strong> {book.author}</p>\n//               <p><strong>Description:</strong> {book.description}</p>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No books available.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import './HomePage.css'; \n// import { Link } from 'react-router-dom'; // Import Link for navigation\n\n// const HomePage = () => {\n//   const [books, setBooks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [userId, setUserId] = useState(''); // Initialize userId\n\n//   useEffect(() => {\n//     const fetchBooks = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5002/api/books');\n//         setBooks(response.data);\n//         setLoading(false);\n//       } catch (err) {\n//         setError('Error fetching books');\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchBooks();\n//   }, []);\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   return (\n//     <div>\n//       <h1>Featured Books</h1>\n//       {/* Link to navigate to the Book Listing page */}\n//       <Link to=\"/books\">\n//         <button className=\"browse-books-button\">Browse All Books</button>\n//       </Link>\n//       <Link to={`/user/${userId}`}>\n//   <button className=\"user-profile-button\">View User Profile</button>\n// </Link>\n\n//       <div className=\"book-list\">\n//         {books.length > 0 ? (\n//           books.map((book) => (\n//             <div key={book._id} className=\"book-item\">\n//               <p><strong>Book Title:</strong> {book.title}</p>\n//               <p><strong>Author:</strong> {book.author}</p>\n//               <p><strong>Description:</strong> {book.description}</p>\n//               {/* Button to navigate to the individual book detail page */}\n//               <Link to={`/book/${book._id}`}>\n//                 <button className=\"view-details-button\">View Details</button>\n//               </Link>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No books available.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\n\n\n\n\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './HomePage.css'; \nimport { Link } from 'react-router-dom'; // Import Link for navigation\n\nconst HomePage = () => {\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userId, setUserId] = useState(''); // Initialize userId\n  const [selectedBookId, setSelectedBookId] = useState(null); // Store selected book ID for reviews\n  const [reviews, setReviews] = useState([]); // Store reviews of the selected book\n  const [reviewContent, setReviewContent] = useState(''); // Store review content\n  const [reviewRating, setReviewRating] = useState(0); // Store review rating\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const response = await axios.get('http://localhost:5002/api/books');\n        setBooks(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error fetching books');\n        setLoading(false);\n      }\n    };\n\n    fetchBooks();\n  }, []);\n\n  // Fetch reviews when a book is selected\n  const fetchReviews = async (bookId) => {\n    try {\n      const response = await axios.get('http://localhost:5002/api/reviews', {\n        params: { bookId },\n      });\n      setReviews(response.data);\n      setSelectedBookId(bookId); // Set the current book for which reviews are fetched\n    } catch (err) {\n      console.error('Error fetching reviews:', err);\n    }\n  };\n\n  // Handle review submission\n  const handleReviewSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!reviewContent || !reviewRating || !selectedBookId) {\n      alert('All fields are required!');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:5002/api/reviews', {\n        bookId: selectedBookId,\n        userId, // Use the actual user ID here\n        rating: reviewRating,\n        content: reviewContent,\n      });\n\n      // Update reviews locally after successful submission\n      setReviews((prevReviews) => [...prevReviews, response.data]);\n      setReviewContent('');\n      setReviewRating(0);\n      alert('Review submitted successfully!');\n    } catch (err) {\n      console.error('Error submitting review:', err);\n      alert('Failed to submit review.');\n    }\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div>\n      <h1>Featured Books</h1>\n      {/* Link to navigate to the Book Listing page */}\n      <Link to=\"/books\">\n        <button className=\"browse-books-button\">Browse All Books</button>\n      </Link>\n      <Link to={`/user/${userId}`}>\n        <button className=\"user-profile-button\">View User Profile</button>\n      </Link>\n\n      <div className=\"book-list\">\n        {books.length > 0 ? (\n          books.map((book) => (\n            <div key={book._id} className=\"book-item\">\n              <p><strong>Book Title:</strong> {book.title}</p>\n              <p><strong>Author:</strong> {book.author}</p>\n              <p><strong>Description:</strong> {book.description}</p>\n              {/* Button to navigate to the individual book detail page */}\n              <Link to={`/book/${book._id}`}>\n                <button className=\"view-details-button\">View Details</button>\n              </Link>\n              {/* Button to view and submit reviews for the book */}\n              <button\n                onClick={() => fetchReviews(book._id)}\n                className=\"view-reviews-button\"\n              >\n                View Reviews\n              </button>\n            </div>\n          ))\n        ) : (\n          <p>No books available.</p>\n        )}\n      </div>\n\n      {/* Display reviews for the selected book */}\n      {selectedBookId && (\n        <div className=\"reviews-section\">\n          <h2>Reviews for Selected Book</h2>\n          <div className=\"review-list\">\n            {reviews.length > 0 ? (\n              reviews.map((review) => (\n                <div key={review._id} className=\"review-item\">\n                  <p><strong>User:</strong> {review.user?.name || 'Anonymous'}</p>\n                  <p><strong>Rating:</strong> {review.rating}/5</p>\n                  <p>{review.content}</p>\n                </div>\n              ))\n            ) : (\n              <p>No reviews available.</p>\n            )}\n          </div>\n\n          {/* Review submission form */}\n          <h3>Submit a Review</h3>\n          <form onSubmit={handleReviewSubmit}>\n            <textarea\n              value={reviewContent}\n              onChange={(e) => setReviewContent(e.target.value)}\n              placeholder=\"Write your review here\"\n              rows=\"5\"\n              cols=\"50\"\n              required\n            />\n            <br />\n            <label>\n              Rating:\n              <select\n                value={reviewRating}\n                onChange={(e) => setReviewRating(Number(e.target.value))}\n                required\n              >\n                <option value=\"\" disabled>Select Rating</option>\n                {[1, 2, 3, 4, 5].map((rating) => (\n                  <option key={rating} value={rating}>{rating}</option>\n                ))}\n              </select>\n            </label>\n            <br />\n            <button type=\"submit\">Submit Review</button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n\n\n\n\n"],"mappings":";;AAOA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,SAASC,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}